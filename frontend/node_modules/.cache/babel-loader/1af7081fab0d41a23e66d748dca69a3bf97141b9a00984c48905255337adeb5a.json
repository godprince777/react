{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/containers/auth/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeField, initializeForm, register } from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const form = useSelector(state => state.auth.register);\n  const auth = useSelector(state => state.auth.auth);\n  const authError = useSelector(state => state.auth.authError);\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'register',\n      key: name,\n      value\n    }));\n  };\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = form;\n    if (password !== passwordConfirm) {\n      //TODO: 에러처리리\n      return;\n    }\n    dispatch(register({\n      username,\n      password\n    }));\n  };\n  // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  //회원가입 성공/실패처리\n  useEffect(() => {\n    if (authError) {\n      console.log('회원가입 실패');\n      console.log(authError);\n    }\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      return;\n    }\n  }, [authError, auth]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(RegisterForm, \"zYqbCirwVWxjr9iYBztB7LTHHiI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","jsxDEV","_jsxDEV","RegisterForm","_s","dispatch","form","state","auth","authError","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","passwordConfirm","console","log","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/containers/auth/RegisterForm.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeField, initializeForm, register } from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const form = useSelector(state => state.auth.register);\n    const auth = useSelector(state => state.auth.auth);\n    const authError = useSelector(state => state.auth.authError);\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n        const { value, name } = e.target;\n        dispatch(\n            changeField({ \n                form: 'register', \n                key: name, \n                value }));\n    };\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n        e.preventDefault();\n        const { username, password, passwordConfirm } = form;\n        if (password !== passwordConfirm) {\n            //TODO: 에러처리리\n            return;\n        }\n        dispatch(register({ username, password }));\n    }\n    // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n    useEffect(() => {\n        dispatch(initializeForm('register'));\n    }, [dispatch]);\n\n    //회원가입 성공/실패처리\n    useEffect(() => {\n        if (authError) {\n            console.log('회원가입 실패');\n            console.log(authError);\n        }\n        if (auth) {\n            console.log('회원가입 성공');\n            console.log(auth);\n            return;\n        }\n    }, [authError, auth]);\n\n    return <AuthForm type=\"register\" form={form} onChange={onChange} onSubmit={onSubmit} />;\n};\n\nexport default RegisterForm;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,oBAAoB;AAC1E,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACT,QAAQ,CAAC;EACtD,MAAMS,IAAI,GAAGZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;EAClD,MAAMC,SAAS,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;EAC5D;EACA,MAAMC,QAAQ,GAAGC,CAAC,IAAI;IAClB,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,QAAQ,CACJR,WAAW,CAAC;MACRS,IAAI,EAAE,UAAU;MAChBS,GAAG,EAAEF,IAAI;MACTD;IAAM,CAAC,CAAC,CAAC;EACrB,CAAC;EACD;EACA,MAAMI,QAAQ,GAAGL,CAAC,IAAI;IAClBA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAgB,CAAC,GAAGd,IAAI;IACpD,IAAIa,QAAQ,KAAKC,eAAe,EAAE;MAC9B;MACA;IACJ;IACAf,QAAQ,CAACN,QAAQ,CAAC;MAAEmB,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAAC;EAC9C,CAAC;EACD;EACAzB,SAAS,CAAC,MAAM;IACZW,QAAQ,CAACP,cAAc,CAAC,UAAU,CAAC,CAAC;EACxC,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;;EAEd;EACAX,SAAS,CAAC,MAAM;IACZ,IAAIe,SAAS,EAAE;MACXY,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBD,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;IAC1B;IACA,IAAID,IAAI,EAAE;MACNa,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBD,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;MACjB;IACJ;EACJ,CAAC,EAAE,CAACC,SAAS,EAAED,IAAI,CAAC,CAAC;EAErB,oBAAON,OAAA,CAACF,QAAQ;IAACuB,IAAI,EAAC,UAAU;IAACjB,IAAI,EAAEA,IAAK;IAACI,QAAQ,EAAEA,QAAS;IAACM,QAAQ,EAAEA;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3F,CAAC;AAACvB,EAAA,CA3CID,YAAY;EAAA,QACGR,WAAW,EACfC,WAAW,EACXA,WAAW,EACNA,WAAW;AAAA;AAAAgC,EAAA,GAJ3BzB,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}