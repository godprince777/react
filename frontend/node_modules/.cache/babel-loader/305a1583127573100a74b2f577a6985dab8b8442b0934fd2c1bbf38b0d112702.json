{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/components/common/Button.js\";\nimport styled from \"styled-components\";\n// styled-components 불러오기 → CSS-in-JS 스타일 작성 가능\n\nimport palette from \"../../lib/styles/palette\";\n// 색상 팔레트 (프로젝트 공통 색상 모음) import\n\nimport { css } from \"styled-components\";\n// css 헬퍼 함수 → 조건부 스타일 작성에 활용\n\n// StyledButton: 실제 버튼에 적용될 스타일 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled.button`\n    border: none; // 테두리 제거\n    border-radius: 4px; // 모서리 살짝 둥글게\n    font-size: 1rem; // 글자 크기 16px\n    font-weight: bold; // 글자 굵게\n    padding: 0.25rem 1rem; // 위아래 0.25rem, 좌우 1rem\n    color: white; // 글자색 흰색\n    outline: none; // 포커스 시 생기는 외곽선 제거\n    cursor: pointer; // 커서를 손가락 모양으로\n\n    background: ${palette.gray[8]}; // 기본 배경색: 짙은 회색\n    &:hover {\n        background: ${palette.gray[6]}; // hover 시: 더 연한 회색으로 변경\n    }\n\n    // props에 fullWidth가 true일 때의 추가 스타일\n    ${props => props.fullWidth && css`\n            padding-top: 0.75rem; // 위쪽 여백 크게\n            padding-bottom: 0.75rem; // 아래쪽 여백 크게\n            width: 100%; // 버튼 가로폭을 100% 꽉 차게\n            font-size: 1.125rem; // 글자 크기 조금 키움\n        `}\n\n    // props에 cyan이 true일 때의 추가 스타일\n    ${props => props.cyan && css`\n            background: ${palette.cyan[5]}; // 배경색을 cyan 계열로\n            &:hover {\n                background: ${palette.cyan[4]}; // hover 시 cyan 계열의 좀 더 밝은 색\n            }\n        `}\n`;\n// → 조건부로 fullWidth나 cyan props가 전달되면, 그에 맞는 스타일을 자동으로 적용\n\n// Button: 실제로 쓸 컴포넌트\n_c = StyledButton;\nconst Button = ({\n  children,\n  ...rest\n}) => {\n  // children: 버튼 안에 들어갈 내용\n  // ...rest: onClick, type 등 나머지 props\n  // StyledButton에 그대로 전달\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Button;\nexport default Button;\n// 다른 컴포넌트에서 Button 컴포넌트를 import 해서 사용 가능\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["styled","palette","css","jsxDEV","_jsxDEV","StyledButton","button","gray","props","fullWidth","cyan","_c","Button","children","rest","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/components/common/Button.js"],"sourcesContent":["import styled from \"styled-components\"; \n// styled-components 불러오기 → CSS-in-JS 스타일 작성 가능\n\nimport palette from \"../../lib/styles/palette\"; \n// 색상 팔레트 (프로젝트 공통 색상 모음) import\n\nimport { css } from \"styled-components\"; \n// css 헬퍼 함수 → 조건부 스타일 작성에 활용\n\n// StyledButton: 실제 버튼에 적용될 스타일 정의\nconst StyledButton = styled.button`\n    border: none; // 테두리 제거\n    border-radius: 4px; // 모서리 살짝 둥글게\n    font-size: 1rem; // 글자 크기 16px\n    font-weight: bold; // 글자 굵게\n    padding: 0.25rem 1rem; // 위아래 0.25rem, 좌우 1rem\n    color: white; // 글자색 흰색\n    outline: none; // 포커스 시 생기는 외곽선 제거\n    cursor: pointer; // 커서를 손가락 모양으로\n\n    background: ${palette.gray[8]}; // 기본 배경색: 짙은 회색\n    &:hover {\n        background: ${palette.gray[6]}; // hover 시: 더 연한 회색으로 변경\n    }\n\n    // props에 fullWidth가 true일 때의 추가 스타일\n    ${props =>\n        props.fullWidth &&\n        css`\n            padding-top: 0.75rem; // 위쪽 여백 크게\n            padding-bottom: 0.75rem; // 아래쪽 여백 크게\n            width: 100%; // 버튼 가로폭을 100% 꽉 차게\n            font-size: 1.125rem; // 글자 크기 조금 키움\n        `}\n\n    // props에 cyan이 true일 때의 추가 스타일\n    ${props =>\n        props.cyan &&\n        css`\n            background: ${palette.cyan[5]}; // 배경색을 cyan 계열로\n            &:hover {\n                background: ${palette.cyan[4]}; // hover 시 cyan 계열의 좀 더 밝은 색\n            }\n        `}\n`;\n// → 조건부로 fullWidth나 cyan props가 전달되면, 그에 맞는 스타일을 자동으로 적용\n\n// Button: 실제로 쓸 컴포넌트\nconst Button = ({ children, ...rest }) => {\n    // children: 버튼 안에 들어갈 내용\n    // ...rest: onClick, type 등 나머지 props\n    // StyledButton에 그대로 전달\n    return <StyledButton {...rest}>{children}</StyledButton>;\n};\n\nexport default Button; \n// 다른 컴포넌트에서 Button 컴포넌트를 import 해서 사용 가능\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC;;AAEA,OAAOC,OAAO,MAAM,0BAA0B;AAC9C;;AAEA,SAASC,GAAG,QAAQ,mBAAmB;AACvC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AACjC;AACA,sBAAsBN,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AACrC;AACA;AACA;AACA,MAAMC,KAAK,IACHA,KAAK,CAACC,SAAS,IACfP,GAAG;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAMM,KAAK,IACHA,KAAK,CAACE,IAAI,IACVR,GAAG;AACX,0BAA0BD,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC;AACzC;AACA,8BAA8BT,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC;AAC7C;AACA,SAAS;AACT,CAAC;AACD;;AAEA;AAAAC,EAAA,GArCMN,YAAY;AAsClB,MAAMO,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EACtC;EACA;EACA;EACA,oBAAOV,OAAA,CAACC,YAAY;IAAA,GAAKS,IAAI;IAAAD,QAAA,EAAGA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC;AAC5D,CAAC;AAACC,GAAA,GALIP,MAAM;AAOZ,eAAeA,MAAM;AACrB;AAAA,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}