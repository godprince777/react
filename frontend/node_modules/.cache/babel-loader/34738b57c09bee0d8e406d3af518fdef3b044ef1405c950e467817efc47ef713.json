{"ast":null,"code":"import { combineReducers } from \"redux\";\n// 여러 개의 리듀서를 하나로 합치는 Redux 함수\n\nimport { all } from \"redux-saga/effects\";\nimport auth, { authSaga } from \"./auth\";\n// auth 리듀서와 authSaga 불러오기\n\nimport loading from \"./loading\";\n\n// 루트 리듀서 정의\nconst rootReducer = combineReducers({\n  auth,\n  loading\n  // auth라는 이름의 state 영역을 auth 리듀서가 담당\n  // → store.auth 로 접근 가능\n});\nexport function* rootSaga() {\n  yield all([authSaga()]);\n}\nexport default rootReducer;\n// 루트 리듀서를 기본으로 export\n// configureStore/createStore 등에 등록해서 쓴다","map":{"version":3,"names":["combineReducers","all","auth","authSaga","loading","rootReducer","rootSaga"],"sources":["/home/prince/work/blog-frontend/src/modules/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"; \n// 여러 개의 리듀서를 하나로 합치는 Redux 함수\n\nimport { all } from \"redux-saga/effects\";\nimport auth, { authSaga } from \"./auth\";\n// auth 리듀서와 authSaga 불러오기\n\nimport loading from \"./loading\";\n\n// 루트 리듀서 정의\nconst rootReducer = combineReducers({\n    auth, \n    loading,\n    // auth라는 이름의 state 영역을 auth 리듀서가 담당\n    // → store.auth 로 접근 가능\n});\n\nexport function* rootSaga() {\n    yield all([authSaga()]);\n}\n\nexport default rootReducer; \n// 루트 리듀서를 기본으로 export\n// configureStore/createStore 등에 등록해서 쓴다"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC;;AAEA,SAASC,GAAG,QAAQ,oBAAoB;AACxC,OAAOC,IAAI,IAAIC,QAAQ,QAAQ,QAAQ;AACvC;;AAEA,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA,MAAMC,WAAW,GAAGL,eAAe,CAAC;EAChCE,IAAI;EACJE;EACA;EACA;AACJ,CAAC,CAAC;AAEF,OAAO,UAAUE,QAAQA,CAAA,EAAG;EACxB,MAAML,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3B;AAEA,eAAeE,WAAW;AAC1B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}