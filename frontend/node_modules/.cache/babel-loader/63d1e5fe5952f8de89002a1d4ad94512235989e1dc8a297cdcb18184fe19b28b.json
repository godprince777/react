{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/containers/auth/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeField, initializeForm, register } from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport { check } from \"../../modules/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const form = useSelector(state => state.auth.register);\n  const auth = useSelector(state => state.auth.auth);\n  const authError = useSelector(state => state.auth.authError);\n  const navigate = useNavigate();\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField('register', name, value));\n  };\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = form;\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('빈 칸을 모두 입력해주세요.');\n      return;\n    }\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeField('register', 'password', ''));\n      dispatch(changeField('register', 'passwordConfirm', ''));\n      return;\n    }\n    dispatch(register({\n      username,\n      password\n    }));\n  };\n\n  // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  //회원가입 성공/실패처리\n  useEffect(() => {\n    if (authError) {\n      console.log('회원가입 실패');\n      console.log(authError);\n    }\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      navigate('/');\n      return;\n    }\n  }, [authError, auth, navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(RegisterForm, \"YNgqmK0a+P2A4u4xgsApPDK1vpw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","check","useNavigate","jsxDEV","_jsxDEV","RegisterForm","_s","dispatch","form","state","auth","authError","navigate","onChange","e","value","name","target","onSubmit","preventDefault","username","password","passwordConfirm","includes","setError","console","log","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/containers/auth/RegisterForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeField, initializeForm, register } from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport { check } from \"../../modules/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const form = useSelector(state => state.auth.register);\n    const auth = useSelector(state => state.auth.auth);\n    const authError = useSelector(state => state.auth.authError);\n    const navigate = useNavigate();\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n        const { value, name } = e.target;\n        dispatch(changeField('register', name, value));\n    };\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n        e.preventDefault();\n        const { username, password, passwordConfirm } = form;\n        if([username, password, passwordConfirm].includes('')) {\n            setError('빈 칸을 모두 입력해주세요.');\n            return;\n        }\n        if (password !== passwordConfirm) {\n            setError('비밀번호가 일치하지 않습니다.');\n            dispatch(changeField( 'register', 'password', ''));\n            dispatch(changeField('register', 'passwordConfirm', ''));\n            return;\n        }\n        dispatch(register({ username, password }));\n    };\n\n    // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n    useEffect(() => {\n        dispatch(initializeForm('register'));\n    }, [dispatch]);\n\n    //회원가입 성공/실패처리\n    useEffect(() => {\n        if (authError) {\n            console.log('회원가입 실패');\n            console.log(authError);\n        }\n        if (auth) {\n            console.log('회원가입 성공');\n            console.log(auth);\n            navigate('/');\n            return;\n        }\n    }, [authError, auth, navigate]);\n\n    return <AuthForm type=\"register\" form={form} onChange={onChange} onSubmit={onSubmit} />;\n};\n\nexport default RegisterForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}