{"ast":null,"code":"import { createAction, handleActions } from \"@reduxjs/toolkit\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport * as userAPI from \"../lib/api/user\";\nimport { createRequestSaga } from \"../lib/createRequestSaga\";\nimport createRequestActionTypes from \"../lib/createRequestActionTypes\";\nconst TEMP_SET_USER = \"user/TEMP_SET_USER\"; //새로 고침 이후 로그인 임시\n//회원 정보확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, {\n    payload: user\n  }) => ({\n    ...state,\n    user\n  }),\n  [CHECK_SUCCESS]: (state, {\n    payload: user\n  }) => ({\n    ...state,\n    user,\n    checkError: null\n  }),\n  [CHECK_FAILURE]: (state, {\n    payload: error\n  }) => ({\n    ...state,\n    user: null,\n    checkError: error\n  })\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","userAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","check","checkSaga","authAPI","userSaga","initialState","user","checkError","state","payload","error"],"sources":["/home/prince/work/blog-frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from \"@reduxjs/toolkit\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport * as userAPI from \"../lib/api/user\";\nimport { createRequestSaga } from \"../lib/createRequestSaga\";\nimport createRequestActionTypes from \"../lib/createRequestActionTypes\";\n\nconst TEMP_SET_USER = \"user/TEMP_SET_USER\"; //새로 고침 이후 로그인 임시\n//회원 정보확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const check = createAction(CHECK);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n    yield takeLatest(CHECK, checkSaga);\n}\n\nconst initialState = {\n    user: null,\n    checkError: null,\n};\n\nexport default handleActions(\n    {\n        [TEMP_SET_USER]: (state, { payload: user }) => ({\n            ...state,\n            user,\n        }),\n        [CHECK_SUCCESS]: (state, { payload: user }) => ({\n            ...state,\n            user,\n            checkError: null,\n        }),\n        [CHECK_FAILURE]: (state, { payload: error }) => ({\n            ...state,\n            user: null,\n            checkError: error,\n        }),\n    },\n    initialState\n);"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAC1C,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,wBAAwB,MAAM,iCAAiC;AAEtE,MAAMC,aAAa,GAAG,oBAAoB,CAAC,CAAC;AAC5C;AACA,MAAM,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAGJ,wBAAwB,CAAC,YAAY,CAAC;AACpF,OAAO,MAAMK,KAAK,GAAGV,YAAY,CAACO,KAAK,CAAC;AAExC,MAAMI,SAAS,GAAGP,iBAAiB,CAACG,KAAK,EAAEK,OAAO,CAACF,KAAK,CAAC;AACzD,OAAO,UAAUG,QAAQA,CAAA,EAAG;EACxB,MAAMX,UAAU,CAACK,KAAK,EAAEI,SAAS,CAAC;AACtC;AAEA,MAAMG,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;AAChB,CAAC;AAED,eAAef,aAAa,CACxB;EACI,CAACK,aAAa,GAAG,CAACW,KAAK,EAAE;IAAEC,OAAO,EAAEH;EAAK,CAAC,MAAM;IAC5C,GAAGE,KAAK;IACRF;EACJ,CAAC,CAAC;EACF,CAACP,aAAa,GAAG,CAACS,KAAK,EAAE;IAAEC,OAAO,EAAEH;EAAK,CAAC,MAAM;IAC5C,GAAGE,KAAK;IACRF,IAAI;IACJC,UAAU,EAAE;EAChB,CAAC,CAAC;EACF,CAACP,aAAa,GAAG,CAACQ,KAAK,EAAE;IAAEC,OAAO,EAAEC;EAAM,CAAC,MAAM;IAC7C,GAAGF,KAAK;IACRF,IAAI,EAAE,IAAI;IACVC,UAAU,EAAEG;EAChB,CAAC;AACL,CAAC,EACDL,YACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}