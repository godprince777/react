{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/components/auth/AuthTemplate.js\";\nimport styled from \"styled-components\";\n// styled-components 라이브러리 import\n// → CSS-in-JS 스타일을 작성할 수 있게 함\n\nimport WhiteBox from \"../common/WhiteBox\";\n// 재사용 가능한 흰색 박스 UI 컴포넌트 import\n\nimport { Link } from 'react-router-dom';\n// SPA 라우팅을 위한 Link 컴포넌트 import\n\nimport palette from \"../../lib/styles/palette\";\n// 색상 팔레트 → 프로젝트 전반의 색상 일관성을 유지\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthTemplateBlock = styled.div`\n    position: absolute; /* 화면을 꽉 채우도록 고정 배치 */\n    left: 0; /* 왼쪽 끝부터 */\n    top: 0;  /* 위쪽 끝부터 */\n    bottom: 0; /* 아래쪽 끝까지 */\n    right: 0;  /* 오른쪽 끝까지 */\n    background: ${palette.gray[2]}; /* 연한 회색 배경 */\n    display: flex; /* flex 레이아웃 사용 */\n    flex-direction: column; /* 세로로 쌓는 방향 */\n    justify-content: center; /* 세로축 가운데 정렬 */\n    align-items: center; /* 가로축 가운데 정렬 */\n`;\n// → 즉, 화면 전체를 중앙 정렬된 flex 컨테이너로 구성\n_c = AuthTemplateBlock;\nconst AuthTemplate = ({\n  children\n}) => {\n  // AuthTemplate 컴포넌트\n  // children → 내부에 들어올 컴포넌트나 JSX를 props로 받음\n\n  return /*#__PURE__*/_jsxDEV(AuthTemplateBlock, {\n    children: /*#__PURE__*/_jsxDEV(WhiteBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-area\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"REACTERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n// → AuthTemplateBlock 안에 WhiteBox를 두고\n//    그 안에 children과 로고를 표시하는 구조\n_c2 = AuthTemplate;\nexport default AuthTemplate;\n// 다른 곳에서 AuthTemplate를 import 해서 재사용할 수 있도록 export\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthTemplateBlock\");\n$RefreshReg$(_c2, \"AuthTemplate\");","map":{"version":3,"names":["styled","WhiteBox","Link","palette","jsxDEV","_jsxDEV","AuthTemplateBlock","div","gray","_c","AuthTemplate","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/components/auth/AuthTemplate.js"],"sourcesContent":["import styled from \"styled-components\";\n// styled-components 라이브러리 import\n// → CSS-in-JS 스타일을 작성할 수 있게 함\n\nimport WhiteBox from \"../common/WhiteBox\";\n// 재사용 가능한 흰색 박스 UI 컴포넌트 import\n\nimport { Link } from 'react-router-dom';\n// SPA 라우팅을 위한 Link 컴포넌트 import\n\nimport palette from \"../../lib/styles/palette\";\n// 색상 팔레트 → 프로젝트 전반의 색상 일관성을 유지\n\nconst AuthTemplateBlock = styled.div`\n    position: absolute; /* 화면을 꽉 채우도록 고정 배치 */\n    left: 0; /* 왼쪽 끝부터 */\n    top: 0;  /* 위쪽 끝부터 */\n    bottom: 0; /* 아래쪽 끝까지 */\n    right: 0;  /* 오른쪽 끝까지 */\n    background: ${palette.gray[2]}; /* 연한 회색 배경 */\n    display: flex; /* flex 레이아웃 사용 */\n    flex-direction: column; /* 세로로 쌓는 방향 */\n    justify-content: center; /* 세로축 가운데 정렬 */\n    align-items: center; /* 가로축 가운데 정렬 */\n`;\n// → 즉, 화면 전체를 중앙 정렬된 flex 컨테이너로 구성\n\nconst AuthTemplate = ({ children }) => {\n    // AuthTemplate 컴포넌트\n    // children → 내부에 들어올 컴포넌트나 JSX를 props로 받음\n\n    return (\n        <AuthTemplateBlock>\n            {/* WhiteBox 안에 로고영역 + children을 감싸도록 배치 */}\n            <WhiteBox>\n                <div className=\"logo-area\">\n                    <Link to=\"/\">REACTERS</Link>\n                    {/* 메인 페이지로 이동할 수 있는 로고 링크 */}\n                </div>\n                {children}\n                {/* 로그인/회원가입 폼 등 자식 컴포넌트를 렌더링 */}\n            </WhiteBox>\n        </AuthTemplateBlock>\n    );\n};\n// → AuthTemplateBlock 안에 WhiteBox를 두고\n//    그 안에 children과 로고를 표시하는 구조\n\nexport default AuthTemplate;\n// 다른 곳에서 AuthTemplate를 import 해서 재사용할 수 있도록 export\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC;AACA;;AAEA,OAAOC,QAAQ,MAAM,oBAAoB;AACzC;;AAEA,SAASC,IAAI,QAAQ,kBAAkB;AACvC;;AAEA,OAAOC,OAAO,MAAM,0BAA0B;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,iBAAiB,GAAGN,MAAM,CAACO,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA,kBAAkBJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACA,CAAC;AACD;AAAAC,EAAA,GAZMH,iBAAiB;AAcvB,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC;EACA;;EAEA,oBACIN,OAAA,CAACC,iBAAiB;IAAAK,QAAA,eAEdN,OAAA,CAACJ,QAAQ;MAAAU,QAAA,gBACLN,OAAA;QAAKO,SAAS,EAAC,WAAW;QAAAD,QAAA,eACtBN,OAAA,CAACH,IAAI;UAACW,EAAE,EAAC,GAAG;UAAAF,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CAAC,EACLN,QAAQ;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE5B,CAAC;AACD;AACA;AAAAC,GAAA,GAnBMR,YAAY;AAqBlB,eAAeA,YAAY;AAC3B;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}