{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\n// Redux Toolkit에서 제공하는 configureStore 함수 import\n// → createStore를 대체하며, DevTools, thunk, etc를 기본 내장\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./index\";\n// 우리가 만든 rootReducer 불러오기\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST']\n    }\n  }).concat(sagaMiddleware)\n  // 루트 리듀서를 reducer 항목에 등록\n  // saga 미들웨어 추가\n});\nexport { sagaMiddleware };\nexport default store;\n// store를 export 해서 Provider가 앱 최상단에서 사용할 수 있게 함","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootReducer","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat"],"sources":["/home/prince/work/blog-frontend/src/modules/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n// Redux Toolkit에서 제공하는 configureStore 함수 import\n// → createStore를 대체하며, DevTools, thunk, etc를 기본 내장\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./index\";\n// 우리가 만든 rootReducer 불러오기\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }).concat(sagaMiddleware),\n  // 루트 리듀서를 reducer 항목에 등록\n  // saga 미들웨어 추가\n});\n\nexport { sagaMiddleware };\nexport default store;\n// store를 export 해서 Provider가 앱 최상단에서 사용할 수 있게 함\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA;;AAEA,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,SAAS;AACjC;;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,CAAC,CAAC;AAE7C,MAAMG,KAAK,GAAGJ,cAAc,CAAC;EAC3BK,OAAO,EAAEH,WAAW;EACpBI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB;IACpC;EACF,CAAC,CAAC,CAACC,MAAM,CAACP,cAAc;EAC1B;EACA;AACF,CAAC,CAAC;AAEF,SAASA,cAAc;AACvB,eAAeC,KAAK;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}