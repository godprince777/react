{"ast":null,"code":"import axios from \"axios\";\nconst client = axios.create();\n\n/*\n  글로벌 설정예시\n\n  //api 주소를 다른곳으로 사용함\n  client.defaults.baseURL = 'https://api.example.com';\n  //헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer token';\n  //인터셉터 설정\n  client.interceptors.request.use(\\\n     response => {\n        // 요청 성공시 특정 작업 수행 \n        return response;\n    },\n    error => {\n        // 요청 실패시 특정 작업 수행\n        return Promise.reject(error);\n    }\n  );\n\n*/\n\nexport default client;","map":{"version":3,"names":["axios","client","create"],"sources":["/home/prince/work/blog-frontend/src/lib/api/client.js"],"sourcesContent":["import axios from \"axios\";\n\nconst client = axios.create();\n\n/*\n  글로벌 설정예시\n\n  //api 주소를 다른곳으로 사용함\n  client.defaults.baseURL = 'https://api.example.com';\n  //헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer token';\n  //인터셉터 설정\n  client.interceptors.request.use(\\\n     response => {\n        // 요청 성공시 특정 작업 수행 \n        return response;\n    },\n    error => {\n        // 요청 실패시 특정 작업 수행\n        return Promise.reject(error);\n    }\n  );\n\n*/\n\n\nexport default client;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}