{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/index.js\";\nimport React from 'react';\n// 리액트 기본 import → JSX 문법을 해석하기 위해 필요\n\nimport ReactDOM from 'react-dom/client';\n// React 18 이상에서 권장되는 createRoot API를 쓰기 위해 react-dom/client 사용\n\nimport './index.css';\n// 프로젝트의 전역 CSS 적용\n\nimport App from './App';\n// 최상위 컴포넌트(App)를 import\n\nimport reportWebVitals from './reportWebVitals';\n// 웹 성능 측정 함수 (옵션)\n// 콘솔이나 분석툴에 성능 데이터를 전송 가능\n\nimport { BrowserRouter } from 'react-router-dom';\n// SPA(싱글 페이지 앱)에서 라우팅을 구현하기 위해 BrowserRouter 컴포넌트 import\n\nimport { Provider } from \"react-redux\";\n// Redux store를 리액트 컴포넌트에 연결해주는 Provider import\n\nimport store, { sagaMiddleware } from \"./modules/store\";\n// Redux의 store와 sagaMiddleware 불러오기\n\nimport { rootSaga } from \"./modules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nsagaMiddleware.run(rootSaga);\n\n// DOM 에서 id=\"root\"인 요소를 찾아서\n// 거기에 리액트 앱을 붙일 수 있는 'root'를 생성\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// React 앱을 렌더링\nroot.render(/*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this));\n\n// 웹 성능 측정을 위한 함수 호출\n// 기본적으로 아무 것도 기록하지 않지만,\n// reportWebVitals(console.log) 형태로 전달하면\n// 콘솔에 성능 정보를 출력해볼 수 있음\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Provider","store","sagaMiddleware","rootSaga","jsxDEV","_jsxDEV","run","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/prince/work/blog-frontend/src/index.js"],"sourcesContent":["import React from 'react'; \n// 리액트 기본 import → JSX 문법을 해석하기 위해 필요\n\nimport ReactDOM from 'react-dom/client'; \n// React 18 이상에서 권장되는 createRoot API를 쓰기 위해 react-dom/client 사용\n\nimport './index.css'; \n// 프로젝트의 전역 CSS 적용\n\nimport App from './App'; \n// 최상위 컴포넌트(App)를 import\n\nimport reportWebVitals from './reportWebVitals'; \n// 웹 성능 측정 함수 (옵션)\n// 콘솔이나 분석툴에 성능 데이터를 전송 가능\n\nimport { BrowserRouter } from 'react-router-dom'; \n// SPA(싱글 페이지 앱)에서 라우팅을 구현하기 위해 BrowserRouter 컴포넌트 import\n\nimport { Provider } from \"react-redux\"; \n// Redux store를 리액트 컴포넌트에 연결해주는 Provider import\n\nimport store, { sagaMiddleware } from \"./modules/store\"; \n// Redux의 store와 sagaMiddleware 불러오기\n\nimport { rootSaga } from \"./modules\";\nsagaMiddleware.run(rootSaga);\n\n// DOM 에서 id=\"root\"인 요소를 찾아서\n// 거기에 리액트 앱을 붙일 수 있는 'root'를 생성\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// React 앱을 렌더링\nroot.render(\n  <Provider store={store}>\n    {/* Redux Provider로 App을 감싸야 모든 컴포넌트가 store에 접근 가능 */}\n    <BrowserRouter>\n      {/* BrowserRouter로 감싸서 SPA 라우팅을 사용할 수 있게 함 */}\n      <App />\n      {/* 실제 우리 애플리케이션 컴포넌트 */}\n    </BrowserRouter>\n  </Provider>\n);\n\n// 웹 성능 측정을 위한 함수 호출\n// 기본적으로 아무 것도 기록하지 않지만,\n// reportWebVitals(console.log) 형태로 전달하면\n// 콘솔에 성능 정보를 출력해볼 수 있음\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;;AAEA,OAAO,aAAa;AACpB;;AAEA,OAAOC,GAAG,MAAM,OAAO;AACvB;;AAEA,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA;;AAEA,SAASC,aAAa,QAAQ,kBAAkB;AAChD;;AAEA,SAASC,QAAQ,QAAQ,aAAa;AACtC;;AAEA,OAAOC,KAAK,IAAIC,cAAc,QAAQ,iBAAiB;AACvD;;AAEA,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrCH,cAAc,CAACI,GAAG,CAACH,QAAQ,CAAC;;AAE5B;AACA;AACA,MAAMI,IAAI,GAAGX,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEjE;AACAH,IAAI,CAACI,MAAM,cACTN,OAAA,CAACL,QAAQ;EAACC,KAAK,EAAEA,KAAM;EAAAW,QAAA,eAErBP,OAAA,CAACN,aAAa;IAAAa,QAAA,eAEZP,OAAA,CAACR,GAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACR,CACZ,CAAC;;AAED;AACA;AACA;AACA;AACAlB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}