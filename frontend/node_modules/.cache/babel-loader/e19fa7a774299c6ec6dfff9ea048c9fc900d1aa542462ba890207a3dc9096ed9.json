{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/components/auth/AuthTemplate.js\";\nimport styled from \"styled-components\";\nimport WhiteBox from \"../common/WhiteBox\";\n// styled-components 라이브러리 import\n// → CSS-in-JS 스타일을 작성하기 위해 사용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthTemplateBlock = styled.div`\n    position: absolute; // 화면 전체를 덮도록 위치 고정\n    left: 0; // 왼쪽 끝부터\n    top: 0;  // 위쪽 끝부터\n    bottom: 0; // 아래쪽 끝까지\n    right: 0;  // 오른쪽 끝까지\n    display: flex; // 내부 요소를 flex 레이아웃으로 배치\n    flex-direction: column; // 위에서 아래로 쌓이도록 세로 방향\n`;\n// → 즉, 화면을 꽉 채우는 flex 컨테이너 정의\n_c = AuthTemplateBlock;\nconst AuthTemplate = ({\n  children\n}) => {\n  // AuthTemplate 컴포넌트\n  // children → 내부에 들어올 요소들을 props로 받음\n  return /*#__PURE__*/_jsxDEV(AuthTemplateBlock, {\n    children: /*#__PURE__*/_jsxDEV(WhiteBox, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n// → AuthTemplateBlock 안에 WhiteBox를 두고\n//    그 안에 children을 표시하는 구조\n_c2 = AuthTemplate;\nexport default AuthTemplate;\n// 다른 곳에서 AuthTemplate 컴포넌트를 import 할 수 있도록 export\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthTemplateBlock\");\n$RefreshReg$(_c2, \"AuthTemplate\");","map":{"version":3,"names":["styled","WhiteBox","jsxDEV","_jsxDEV","AuthTemplateBlock","div","_c","AuthTemplate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/components/auth/AuthTemplate.js"],"sourcesContent":["import styled from \"styled-components\";\nimport WhiteBox from \"../common/WhiteBox\";\n// styled-components 라이브러리 import\n// → CSS-in-JS 스타일을 작성하기 위해 사용\n\nconst AuthTemplateBlock = styled.div`\n    position: absolute; // 화면 전체를 덮도록 위치 고정\n    left: 0; // 왼쪽 끝부터\n    top: 0;  // 위쪽 끝부터\n    bottom: 0; // 아래쪽 끝까지\n    right: 0;  // 오른쪽 끝까지\n    display: flex; // 내부 요소를 flex 레이아웃으로 배치\n    flex-direction: column; // 위에서 아래로 쌓이도록 세로 방향\n`;\n// → 즉, 화면을 꽉 채우는 flex 컨테이너 정의\n\nconst AuthTemplate = ({ children }) => {\n    // AuthTemplate 컴포넌트\n    // children → 내부에 들어올 요소들을 props로 받음\n    return (\n        <AuthTemplateBlock>\n            <WhiteBox>\n                {children}\n            </WhiteBox>\n        </AuthTemplateBlock>\n    );\n};\n// → AuthTemplateBlock 안에 WhiteBox를 두고\n//    그 안에 children을 표시하는 구조\n\nexport default AuthTemplate;\n// 다른 곳에서 AuthTemplate 컴포넌트를 import 할 수 있도록 export\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AAAAC,EAAA,GATMF,iBAAiB;AAWvB,MAAMG,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC;EACA;EACA,oBACIL,OAAA,CAACC,iBAAiB;IAAAI,QAAA,eACdL,OAAA,CAACF,QAAQ;MAAAO,QAAA,EACJA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE5B,CAAC;AACD;AACA;AAAAC,GAAA,GAZMN,YAAY;AAclB,eAAeA,YAAY;AAC3B;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}