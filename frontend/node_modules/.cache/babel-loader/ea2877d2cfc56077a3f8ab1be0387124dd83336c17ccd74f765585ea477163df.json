{"ast":null,"code":"var _jsxFileName = \"/home/prince/work/blog-frontend/src/containers/auth/LoginForm.js\",\n  _s = $RefreshSig$();\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport { changeField, initializeForm, login } from \"../../modules/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const form = useSelector(state => state.auth.login);\n  const auth = useSelector(state => state.auth.auth);\n  const authError = useSelector(state => state.auth.authError);\n  const navigate = useNavigate();\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField('login', name, value));\n  };\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = form;\n    dispatch(login({\n      username,\n      password\n    }));\n  };\n  // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  // 로그인 성공/실패 처리\n  useEffect(() => {\n    if (authError) {\n      console.log('로그인 실패');\n      console.log(authError);\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      console.log(auth);\n      navigate('/');\n      return;\n    }\n  }, [authError, auth, navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n_s(LoginForm, \"YNgqmK0a+P2A4u4xgsApPDK1vpw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["AuthForm","changeField","initializeForm","login","useDispatch","useSelector","useEffect","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","dispatch","form","state","auth","authError","navigate","onChange","e","value","name","target","onSubmit","preventDefault","username","password","console","log","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prince/work/blog-frontend/src/containers/auth/LoginForm.js"],"sourcesContent":["import AuthForm from \"../../components/auth/AuthForm\";\nimport { changeField, initializeForm, login } from \"../../modules/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const form = useSelector(state => state.auth.login);\n    const auth = useSelector(state => state.auth.auth);\n    const authError = useSelector(state => state.auth.authError);\n    const navigate = useNavigate();\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n        const { value, name } = e.target;\n        dispatch(changeField('login', name, value));\n    };\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n        e.preventDefault();\n        const { username, password } = form;\n        dispatch(login({ username, password }));\n    };\n    // 컴포넌트에서 처음 렌더링 될 때 form 초기화\n    useEffect(() => {\n        dispatch(initializeForm('login'));\n    }, [dispatch]);\n\n    // 로그인 성공/실패 처리\n    useEffect(() => {\n        if (authError) {\n            console.log('로그인 실패');\n            console.log(authError);\n        }\n        if (auth) {\n            console.log('로그인 성공');\n            console.log(auth);\n            navigate('/');\n            return;\n        }\n    }, [authError, auth, navigate]);\n\n    return <AuthForm \n             type=\"login\"\n             form={form}\n             onChange={onChange}\n             onSubmit={onSubmit} \n            />;\n};\n\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,SAASC,WAAW,EAAEC,cAAc,EAAEC,KAAK,QAAQ,oBAAoB;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACZ,KAAK,CAAC;EACnD,MAAMY,IAAI,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;EAClD,MAAMC,SAAS,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;EAC5D,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMW,QAAQ,GAAGC,CAAC,IAAI;IAClB,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCV,QAAQ,CAACX,WAAW,CAAC,OAAO,EAAEoB,IAAI,EAAED,KAAK,CAAC,CAAC;EAC/C,CAAC;EACD;EACA,MAAMG,QAAQ,GAAGJ,CAAC,IAAI;IAClBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGb,IAAI;IACnCD,QAAQ,CAACT,KAAK,CAAC;MAAEsB,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAAC;EAC3C,CAAC;EACD;EACApB,SAAS,CAAC,MAAM;IACZM,QAAQ,CAACV,cAAc,CAAC,OAAO,CAAC,CAAC;EACrC,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;;EAEd;EACAN,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,EAAE;MACXW,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBD,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;IAC1B;IACA,IAAID,IAAI,EAAE;MACNY,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBD,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;MACjBE,QAAQ,CAAC,GAAG,CAAC;MACb;IACJ;EACJ,CAAC,EAAE,CAACD,SAAS,EAAED,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAE/B,oBAAOR,OAAA,CAACT,QAAQ;IACP6B,IAAI,EAAC,OAAO;IACZhB,IAAI,EAAEA,IAAK;IACXK,QAAQ,EAAEA,QAAS;IACnBK,QAAQ,EAAEA;EAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AACd,CAAC;AAACtB,EAAA,CA1CID,SAAS;EAAA,QACMN,WAAW,EACfC,WAAW,EACXA,WAAW,EACNA,WAAW,EACZE,WAAW;AAAA;AAAA2B,EAAA,GAL1BxB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}